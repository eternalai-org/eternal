
name: Latest Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

defaults:
  run:
    shell: bash


permissions:
  contents: write
  packages: write

jobs:
  # lint:
  #   name: Lint files
  #   runs-on: 'ubuntu-latest'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.21'
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2.5.2
  #       with:
  #         version: latest
  # test:
  #   name: Run tests
  #   runs-on: 'ubuntu-latest'
  #   needs: lint
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.21'
  #     - run: go test -v -cover
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    # needs: test
    strategy:
      matrix:
        # List of GOOS and GOARCH pairs from `go tool dist list`
        goosarch:
          - 'linux/amd64'
          # etc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          VERSION_TAG=${{github.ref_name}}
          BINARY_NAME=eternal-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -ldflags "-X main.VersionTag=$VERSION_TAG" -o "$BINARY_NAME" -v
      - name: Release Notes
        run:
          git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Release with Notes
        uses: softprops/action-gh-release@v2
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: false
          files: | 
            ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}