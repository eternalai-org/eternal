#!/bin/sh
# Based on Deno installer. Copyright 2019 the Deno authors. All rights reserved. MIT license.
set -e

if [ "$OS" = "Windows_NT" ]; then
  target="windows"
  echo "Windows is not supported at the moment, sorry" >&2
  exit 1
else
  case $(uname -sm) in
    "Darwin x86_64")
      target="macos"
      echo "Macos is not supported at the moment, sorry" >&2
      exit 1
      ;;
    "Darwin arm64")
      target="macos"
      echo "Macos is not supported at the moment, sorry" >&2
      exit 1
      ;;
    *)
      target="linux-amd64"
      ;;
  esac
fi

if [ $# -eq 0 ]; then
  SOURCE_URI="https://github.com/eternalai-org/eternal/releases/latest/download/eternal-${target}"
else
  SOURCE_URI="https://github.com/eternalai-org/eternal/releases/download/${1}/eternal-${target}"
fi

echo
echo "> Removing old files"
echo
rm -f eternal
rm -f run-eternal.sh

echo "> Downloading eternal"
echo
curl -LJ -o eternal $SOURCE_URI 

echo "> Enter your account private key:"
read ACCOUNT

#check if the account is valid
if [[ ! $ACCOUNT =~ ^[a-fA-F0-9]{64}$ ]]; then
    echo "Invalid account"
    exit 1
fi

echo 
echo "> Enter your lighthouse API:"
read LIGHTHOUSE_API

#check if the lighthouse API is valid
if [[ ! $LIGHTHOUSE_API =~ ^[a-fA-F0-9]{8}\.[a-fA-F0-9]{32}$ ]]; then
    echo "Invalid lighthouse API"
    exit 1
fi

script="
#!/bin/sh

# DO NOT EDIT THIS FILE
# This file was generated by the eternal-setup.sh script

./eternal -account $ACCOUNT -lighthouse-api $LIGHTHOUSE_API
"

echo "> Creating script"
echo
echo "$script" > run-eternal.sh

echo "> Setting up permissions"
echo
chmod +x run-eternal.sh
chmod +x eternal

echo "> Setup complete!"
echo
echo "> To start the miner run:"
echo "-------------------------"
echo "|                       |"
echo "|  ./run-eternal.sh  |"
echo "|                       |"
echo "-------------------------"